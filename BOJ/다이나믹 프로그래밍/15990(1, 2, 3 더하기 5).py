"""
숫자 n일 때
1. n-1 경우 중에 2, 3으로 끝나는 경우
2. n-2 경우 중에 1, 3으로 끝나는 경우
3. n-3 경우 중에 1, 2으로 끝나는 경우

세 경우를 더하는 식으로 dp테이블 구성하면 되는데, 시간 초과 방지를 위해 계산 과정에서 일일이 나머지 계산을 해주는 부분이 잘 이해가진 않는다.

-> 오버플로우 방지라고도 한다.
"""

t = int(input())
t_list = []
for i in range(t):
    x = int(input())
    t_list.append(x)

t_max = max(t_list)

dp = [0,0,0,0] * (t_max+1)
dp[1] = [0,1,0,0]
dp[2] = [0,0,1,0]
dp[3] = [0,1,1,1]

for i in range(4, t_max+1):
    dp[i] = [0, (dp[i-1][2]+dp[i-1][3])%1000000009 , (dp[i-2][1]+dp[i-2][3])%1000000009 , (dp[i-3][1]+dp[i-3][2])%1000000009 ]

for i in t_list:
    print(sum(dp[i])%1000000009)